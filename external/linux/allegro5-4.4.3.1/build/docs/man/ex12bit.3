.\" Generated by the Allegro makedoc utility
.TH ex12bit 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
ex12bit \- How to fake a 12-bit truecolor mode on an 8-bit card. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B Example ex12bit
.SH DESCRIPTION
This program sets up a 12-bit mode on any 8-bit card, by
setting up a 256-colour palette that will fool the eye into
grouping two 8-bit pixels into one 12-bit pixel. In order
to do this, you make your 256-colour palette with all the
combinations of blue and green, assuming green ranges from 0-15
and blue from 0-14. This takes up 16x15=240 colours. This
leaves 16 colours to use as red (red ranges from 0-15).
Then you put your green/blue in one pixel, and your red in
the pixel next to it. The eye gets fooled into thinking it's
all one pixel.

The example starts setting a normal 256 color mode, and
construct a special palette for it. But then comes the trick:
you need to write to a set of two adjacent pixels to form a
single 12 bit dot. Two eight bit pixels is the same as one 16
bit pixel, so after setting the video mode you need to hack
the screen bitmap about, halving the width and changing it
to use the 16 bit drawing code. Then, once you have packed a
color into the correct format (using the makecol12() function
below), any of the normal Allegro drawing functions can be
used with this 12 bit display!

Things to note:

The horizontal width is halved, so you get resolutions
like 320x480, 400x600, and 512x768.

Because each dot is spread over two actual pixels, the
display will be darker than in a normal video mode.

Any bitmap data will obviously need converting to the
correct 12 bit format: regular 15 or 16 bit images won't
display correctly...

Although this works like a truecolor mode, it is
actually using a 256 color palette, so palette fades are
still possible!

This code only works in linear screen modes (don't try
Mode-X).

.SH SEE ALSO
.BR BITMAP (3),
.BR END_OF_MAIN (3),
.BR MATRIX (3),
.BR PALETTE (3),
.BR RGB (3),
.BR allegro_error (3),
.BR allegro_init (3),
.BR allegro_message (3),
.BR apply_matrix (3),
.BR blit (3),
.BR circle (3),
.BR clear_bitmap (3),
.BR clear_keybuf (3),
.BR clear_to_color (3),
.BR create_bitmap (3),
.BR create_bitmap_ex (3),
.BR destroy_bitmap (3),
.BR ellipsefill (3),
.BR fade_out (3),
.BR fixcos (3),
.BR fixed (3),
.BR fixsin (3),
.BR fixtoi (3),
.BR font (3),
.BR get_rotation_matrix (3),
.BR getpixel (3),
.BR install_keyboard (3),
.BR itofix (3),
.BR keypressed (3),
.BR line (3),
.BR makecol (3),
.BR masked_blit (3),
.BR putpixel (3),
.BR rest (3),
.BR screen (3),
.BR set_clip_rect (3),
.BR set_color (3),
.BR set_gfx_mode (3),
.BR set_palette (3),
.BR text_height (3),
.BR text_length (3),
.BR textout_ex (3),
.BR textprintf_ex (3)
