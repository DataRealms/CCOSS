.\" Generated by the Allegro makedoc utility
.TH find_allegro_resource 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
find_allegro_resource \- Searches for a support file in many places. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B int find_allegro_resource(char *dest, const char *resource, 
.B const char *ext, const char *datafile, 
.B const char *objectname, const char *envvar, 
.B const char *subdir, int size);
.SH DESCRIPTION
Searches for a support file, eg. `allegro.cfg' or `language.dat'. Passed a
resource string describing what you are looking for, along with extra 
optional information such as the default extension, what datafile to look 
inside, what the datafile object name is likely to be, any special 
environment variable to check, and any subdirectory that you would like 
to check as well as the default location, this function looks in a hell 
of a lot of different places :-). Pass NULL for the parameters you are not
using.

Check the documentation chapter specific to your platform for information
on additional paths this function might search for. Also, don't forget
about set_allegro_resource_path() to extend the searches. Example:

.nf
   char path[256];
   int ret;
   ret = find_allegro_resource(path, "scores.cfg", NULL, NULL,
                               NULL, NULL, NULL, sizeof(path));
   if (ret == 0) {
      /* Found system wide scores file. */
   } else {
      /* No previous scores, create our own file. */
   }
.fi
.SH "RETURN VALUE"
Returns zero on success, and stores a full path to the file (at most size
bytes) into the dest buffer.

.SH SEE ALSO
.BR set_allegro_resource_path (3)
