.\" Generated by the Allegro makedoc utility
.TH fixmul 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
fixmul \- Multiplies two fixed point values together. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B fixed fixmul(fixed x, fixed y);
.SH DESCRIPTION
A fixed point value can be multiplied or divided by an integer with the 
normal `*' and `/' operators. To multiply two fixed point values, though,
you must use this function.

If an overflow occurs, `errno' will be set and the maximum possible value
will be returned, but `errno' is not cleared if the operation is
successful. This means that if you are going to test for overflow you
should set `errno=0' before calling fixmul(). Example:

.nf
   fixed result;
   
   /* This will put 30000 into `result'. */
   result = fixmul(itofix(10), itofix(3000));
   /* But this overflows, and sets `errno'. */
   result = fixmul(itofix(100), itofix(3000));
   ASSERT(!errno);
.fi
.SH "RETURN VALUE"
Returns the clamped result of multiplying `x' by `y', setting `errno' to
ERANGE if there was an overflow.

.SH SEE ALSO
.BR fixadd (3),
.BR fixsub (3),
.BR fixdiv (3),
.BR ex3buf (3),
.BR excustom (3),
.BR exfixed (3),
.BR exspline (3),
.BR exstars (3),
.BR exupdate (3)
