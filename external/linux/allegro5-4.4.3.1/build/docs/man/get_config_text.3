.\" Generated by the Allegro makedoc utility
.TH get_config_text 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
get_config_text \- Returns a string translated to the current language. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B const char *get_config_text(const char *msg);
.SH DESCRIPTION
This function is primarily intended for use by internal library code, but 
it may perhaps be helpful to application programmers as well. It uses the 
`language.dat' or `XXtext.cfg' files (where XX is a language code) to look 
up a translated version of the parameter in the currently selected 
language.

This is basically the same thing as calling get_config_string() with 
`[language]' as the section, `msg' as the variable name, and `msg' as the 
default value, but it contains some special code to handle Unicode format 
conversions. The `msg' parameter is always given in ASCII format, but the 
returned string will be converted into the current text encoding, with 
memory being allocated as required, so you can assume that this pointer 
will persist without having to manually allocate storage space for each 
string.

Note that if you are planning on distributing your game on the Unix
platform there is a special issue with how to deal with the `language.dat'
file. Read section "Files shared by Allegro" of the chapter "Unix
specifics" to learn more about this.
.SH "RETURN VALUE"
Returns a suitable translation if one can be found or a copy of the 
parameter if nothing else is available. 

.SH SEE ALSO
.BR get_config_string (3),
.BR reload_config_texts (3)
