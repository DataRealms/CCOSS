.\" Generated by the Allegro makedoc utility
.TH list_config_entries 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
list_config_entries \- Lists the names of all entries in a config section Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B int list_config_entries(const char *section, const char ***names);
.SH DESCRIPTION
This function can be used to get a list of all entries in the given config
section. The names parameter is a pointer to an array of strings. If it
points to a NULL pointer, the list will be allocated, else it will be
re-allocated. You should free the list again with free_config_entries if you
don't need it anymore, or you can pass it again to list_config_entries and
the memory will be re-used. See the following example for how you can use it,
it will print out the complete contents of the current configuration:

.nf
   int i, n;
   char const **sections = NULL;
   char const **entries = NULL;
   
   /* List all entries not in any section. */
   n = list_config_entries(NULL, &entries);
   for (i = 0; i 
      printf(" %s=\\"%s\\"\\n", entries[i], get_config_string(
             NULL, entries[i], "-"));
   
   /* List all sections (and entries in them). */
   n = list_config_sections(&sections);
   /* loop through all section names */
   for (i = 0; i 
   {
      int j, m;
      printf("%s\\n", sections[i]);
      m = list_config_entries(sections[i], &entries);
      /* loop through all entries in the section */
      for (j = 0; j 
      {
          printf(" %s=\\"%s\\"\\n", entries[j], get_config_string(
             sections[i], entries[j], "-"));
      }
   }
   /* It is enough to free the arrays once at the end. */
   free_config_entries(&sections);
   free_config_entries(&entries);
.fi
.SH "RETURN VALUE"
Returns the number of valid strings in the names array.

.SH SEE ALSO
.BR set_config_file (3),
.BR get_config_string (3),
.BR list_config_sections (3),
.BR free_config_entries (3)
