.\" Generated by the Allegro makedoc utility
.TH makecol8 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
makecol8, makecol15, makecol16, makecol24, makecol32 \- Converts an RGB value into a display dependent pixel format. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B int makecol8(int r, int g, int b);

.B int makecol15(int r, int g, int b);

.B int makecol16(int r, int g, int b);

.B int makecol24(int r, int g, int b);

.B int makecol32(int r, int g, int b);
.SH DESCRIPTION
These functions convert colors from a hardware independent form (red, 
green, and blue values ranging 0-255) into various display dependent 
pixel formats. Converting to 15, 16, 24, or 32-bit formats only takes a 
few shifts, so it is fairly efficient. Converting to an 8-bit color 
involves searching the palette to find the closest match, which is quite 
slow unless you have set up an RGB mapping table (see below). Example:

.nf
   /* 16 bit color version of green. */
   int green_color = makecol16(0, 255, 0);
.fi
.SH "RETURN VALUE"
Returns the requested RGB triplet in the specified color depth.

.SH SEE ALSO
.BR makeacol32 (3),
.BR makecol (3),
.BR makecol_depth (3),
.BR makecol15_dither (3),
.BR rgb_map (3),
.BR bestfit_color (3),
.BR set_color_depth (3),
.BR exrgbhsv (3)
