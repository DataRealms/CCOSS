.\" Generated by the Allegro makedoc utility
.TH masked_blit 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
masked_blit \- Copies a rectangle skipping pixels with the mask color. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B void masked_blit(BITMAP *source, BITMAP *dest, int source_x, int source_y,
.B int dest_x, int dest_y, int width, int height);
.SH DESCRIPTION
Like blit(), but skips transparent pixels, which are marked by a zero in 
256-color modes or bright pink for truecolor data (maximum red and blue, 
zero green), and requires the source and destination bitmaps to be of 
the same color depth. The source and destination regions must not overlap.
Example:

.nf
   BITMAP *hud_overlay;
   ...
   /* Paint hud overlay on the screen. */
   masked_blit(hud_overlay, screen, 0, 0, 0, 0,
               hud_overlay->w, hud_overlay->h);
.fi

If the GFX_HW_VRAM_BLIT_MASKED bit in the gfx_capabilities flag is set, 
the current driver supports hardware accelerated masked blits from one 
part of the screen onto another. This is extremely fast, so when this 
flag is set it may be worth storing some of your more frequently used 
sprites in an offscreen portion of the video memory.

Warning: if the hardware acceleration flag is not set, masked_blit() will 
not work correctly when used with a source image in system or video 
memory so the latter must be a memory bitmap.

.SH SEE ALSO
.BR blit (3),
.BR masked_stretch_blit (3),
.BR draw_sprite (3),
.BR bitmap_mask_color (3),
.BR ex12bit (3),
.BR expat (3)
