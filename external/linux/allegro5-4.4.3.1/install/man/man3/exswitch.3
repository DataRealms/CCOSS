.\" Generated by the Allegro makedoc utility
.TH exswitch 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
exswitch \- Controlling the console switch mode for background running. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B Example exswitch
.SH DESCRIPTION
This program shows how to control the console switching mode, and
let your program run in the background. These functions don't apply
to every platform and driver, for example you can't control the
switching mode from a DOS program.

Yes, I know the fractal drawing is very slow: that's the point!
This is so you can easily check whether it goes on working in the
background after you switch away from the app.

Depending on the type of selected switching mode, you will see
whether the contents of the screen are preserved or not.

.SH SEE ALSO
.BR BITMAP (3),
.BR END_OF_FUNCTION (3),
.BR END_OF_MAIN (3),
.BR LOCK_FUNCTION (3),
.BR LOCK_VARIABLE (3),
.BR PALETTE (3),
.BR SCREEN_H (3),
.BR SCREEN_W (3),
.BR acquire_bitmap (3),
.BR acquire_screen (3),
.BR allegro_error (3),
.BR allegro_exit (3),
.BR allegro_init (3),
.BR allegro_message (3),
.BR bitmap_color_depth (3),
.BR blit (3),
.BR clear_to_color (3),
.BR create_sub_bitmap (3),
.BR desktop_palette (3),
.BR destroy_bitmap (3),
.BR font (3),
.BR get_display_switch_mode (3),
.BR gfx_mode_select_ex (3),
.BR install_int (3),
.BR install_keyboard (3),
.BR install_mouse (3),
.BR install_timer (3),
.BR keypressed (3),
.BR makecol (3),
.BR palette_color (3),
.BR putpixel (3),
.BR readkey (3),
.BR rectfill (3),
.BR release_bitmap (3),
.BR release_screen (3),
.BR screen (3),
.BR set_color_depth (3),
.BR set_display_switch_callback (3),
.BR set_display_switch_mode (3),
.BR set_gfx_mode (3),
.BR set_palette (3),
.BR textout_centre_ex (3),
.BR textprintf_centre_ex (3)
