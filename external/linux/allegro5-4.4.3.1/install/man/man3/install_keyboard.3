.\" Generated by the Allegro makedoc utility
.TH install_keyboard 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
install_keyboard \- Installs the Allegro keyboard interrupt handler.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B int install_keyboard();
.SH DESCRIPTION
Installs the Allegro keyboard interrupt handler. You must call this 
before using any of the keyboard input routines. Once you have set up the 
Allegro handler, you can no longer use operating system calls or C 
library functions to access the keyboard.

Note that on some platforms the keyboard won't work unless you have set a
graphics mode, even if this function returns a success value before
calling set_gfx_mode. This can happen in environments with graphic
windowed modes, since Allegro usually reads the keyboard through the
graphical window (which appears after the set_gfx_mode call). Example:

.nf
   allegro_init();
   install_timer();
   install_keyboard();
   /* We are not 100% sure we can read the keyboard yet! */
   if (set_gfx_mode(GFX_AUTODETECT, 640, 480, 0, 0) != 0)
      abort_on_error("Couldn't set graphic mode!");
   
   /* Now we are guaranteed to be able to read the keyboard. */
   readkey();
.fi
.SH "RETURN VALUE"
Returns zero on success, or a negative number on failure (but you may
decide not to check the return value as this function is very unlikely to
fail).

.SH SEE ALSO
.BR remove_keyboard (3),
.BR poll_keyboard (3),
.BR key (3),
.BR keypressed (3),
.BR readkey (3),
.BR ureadkey (3),
.BR keyboard_callback (3),
.BR keyboard_ucallback (3),
.BR keyboard_lowlevel_callback (3),
.BR three_finger_flag (3),
.BR key_led_flag (3),
.BR set_leds (3),
.BR set_keyboard_rate (3),
.BR set_gfx_mode (3)
