.\" Generated by the Allegro makedoc utility
.TH merge_fonts 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
merge_fonts \- Merges two fonts into one font. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B FONT *merge_fonts(FONT *f1, FONT *f2)
.SH DESCRIPTION
This function merges the character ranges from two fonts and returns a new
font containing all characters in the old fonts. In general, you cannot
merge fonts of different types (eg, TrueType fonts and bitmapped fonts),
but as a special case, this function can promote a monochrome bitmapped
font to a color font and merge those. Example:

.nf
   FONT *myfont;
   FONT *myfancy_font;
   FONT *lower_range;
   FONT *upper_range;
   FONT *capitals;
   FONT *combined_font;
   FONT *tempfont;
   ...
   /* Create a font that contains the capitals from  */
   /* the fancy font but other characters from myfont */
   lower_range = extract_font_range(myfont, -1, 'A'-1);
   upper_range = extract_font_range(myfont, 'Z'+1, -1);
   capitals = extract_font_range(myfancy_font, 'A', 'Z');
   
   tempfont = merge_fonts(lower_range, capitals);
   combined_font = merge_fonts(tempfont, upper_range);
   
   /* Clean up temporary fonts */
   destroy_font(lower_range);
   destroy_font(upper_range);
   destroy_font(capitals);
   destroy_font(tempfont);
.fi
.SH "RETURN VALUE"
Returns a pointer to the new font or NULL on error. Remember that you are
responsible for destroying the font when you are finished with it to
avoid memory leaks.

.SH SEE ALSO
.BR extract_font_range (3),
.BR is_trans_font (3),
.BR is_color_font (3),
.BR is_mono_font (3),
.BR exfont (3)
