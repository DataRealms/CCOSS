.\" Generated by the Allegro makedoc utility
.TH register_assert_handler 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
register_assert_handler \- Registers a custom handler for assert failures. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B void register_assert_handler(int (*handler)(const char *msg));
.SH DESCRIPTION
Supplies a custom handler function for dealing with assert failures. Your 
callback will be passed a formatted error message in ASCII, and should 
return non-zero if it has processed the error, or zero to continue with 
the default actions. You could use this to ignore assert failures, or to 
display the error messages on a graphics mode screen without aborting the 
program. You can call this function even when Allegro has not been
initialised. Example:

.nf
   int show_but_continue(const char *text)
   {
       alert("Uh oh...", "Fasten your seat belts.", text,
             "&Go on!", NULL, 'g', 0);
       return 1;
   }
   ...
      register_assert(show_but_continue);
      ASSERT(0); /* This won't crash the program now. */
.fi

.SH SEE ALSO
.BR al_assert (3),
.BR ASSERT (3),
.BR register_trace_handler (3)
