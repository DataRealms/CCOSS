.\" Generated by the Allegro makedoc utility
.TH ureadkey 3 "version 4.4.3" "Allegro" "Allegro manual"
.SH NAME
ureadkey \- Returns the next unicode character from the keyboard buffer. Allegro game programming library.\&
.SH SYNOPSIS
.B #include <allegro.h>

.sp
.B int ureadkey(int *scancode);
.SH DESCRIPTION
Returns the next character from the keyboard buffer, in Unicode format. 
If the buffer is empty, it waits until a key is pressed. You can see if
there are queued keypresses with keypressed(). The return value contains
the Unicode value of the key, and if not NULL, the pointer argument will
be set to the scancode. Unlike readkey(), this function is able to return
character values greater than 255. Example:

.nf
   int val, scancode;
   ...
   val = ureadkey(&scancode);
   if (val == 0x00F1)
      allegro_message("You pressed n with tilde\\n");
   
   if (val == 0x00DF)
      allegro_message("You pressed sharp s\\n");
   
.fi
You should be able to find Unicode character maps at
http://www.unicode.org/. Remember that on DOS you must specify a custom
keyboard map (like those found in `keyboard.dat') usually with the help of
a configuration file specifying the language mapping (keyboard variable in
system section of `allegro.cfg'), or you will get the default US keyboard
mapping.

.SH SEE ALSO
.BR install_keyboard (3),
.BR readkey (3),
.BR keypressed (3),
.BR clear_keybuf (3),
.BR simulate_ukeypress (3),
.BR exkeys (3)
